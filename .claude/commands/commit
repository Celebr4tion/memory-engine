#!/bin/bash
# Custom command: /commit
# Description: Smart commit with testing and formatting

set -e

echo "💾 Memory Engine Smart Commit"
echo "============================="

# Check if virtual environment is activated
if [[ "$VIRTUAL_ENV" == "" ]]; then
    echo "⚠️  Activating virtual environment..."
    source .venv/bin/activate
fi

# Check git status
if git diff --quiet && git diff --cached --quiet; then
    echo "❌ No changes to commit"
    exit 1
fi

# Show current changes
echo "📋 Current changes:"
git status --short

# Run quick tests on changed files
echo "🧪 Running quick tests..."
CHANGED_FILES=$(git diff --name-only --cached | grep -E "\.(py)$" || true)

if [[ -n "$CHANGED_FILES" ]]; then
    echo "🔍 Testing changed Python files..."
    for file in $CHANGED_FILES; do
        if [[ -f "$file" ]]; then
            echo "  - Checking $file..."
            python -m py_compile "$file" || {
                echo "❌ Syntax error in $file"
                exit 1
            }
        fi
    done
    
    # Run relevant tests
    echo "🏃 Running relevant tests..."
    python -m pytest tests/ -v --tb=short -x -k "not Integration" || {
        echo "❌ Tests failed. Fix issues before committing."
        exit 1
    }
fi

# Get commit message
if [[ $# -eq 0 ]]; then
    echo "📝 Enter commit message:"
    read -r COMMIT_MSG
else
    COMMIT_MSG="$*"
fi

# Add standard footer
COMMIT_MSG_WITH_FOOTER="$COMMIT_MSG

🤖 Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>"

# Commit changes
echo "💾 Committing changes..."
git commit -m "$COMMIT_MSG_WITH_FOOTER"

echo "✅ Commit successful!"
echo "📊 Recent commits:"
git log --oneline -5